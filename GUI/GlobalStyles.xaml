<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--
    Using this XAML file instead of App.xaml because we can reference this from UserControls and then see the styles applied in the designer, not just at runtime.
    The only downside is you have to add this to every Window and UserControl:
         <ResourceDictionary>
             <ResourceDictionary.MergedDictionaries>
                 <ResourceDictionary Source="pack://application:,,,/RubeusGui;component/GlobalStyles.xaml" />
             </ResourceDictionary.MergedDictionaries>
         </ResourceDictionary>
    -->
    
    <SolidColorBrush x:Key="ForegroundTextColor" Color="White" />
    <SolidColorBrush x:Key="ForegroundTextDisabledColor" Color="#FF65656A" />
    <SolidColorBrush x:Key="ForegroundLinkColor" Color="#FFA5CAFF" />
    <SolidColorBrush x:Key="TabBackgroundColor" Color="#FF333337" />
    <SolidColorBrush x:Key="WindowBackgroundColor" Color="#FF252526" />

    <Style TargetType="TextBlock">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundTextColor}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ForegroundTextDisabledColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLinkColor}" />
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundTextColor}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="#FF3E3E3E" />
        <Setter Property="BorderBrush" Value="#FF575757" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- Had to override the whole control template as there's no other way to control the disabled background (which is fine with the default style on Win10 but on Win7 it looks bad -->
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundTextColor}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="#FF3E3E3E" />
        <Setter Property="BorderBrush" Value="#FF575757" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#FF474D55" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundTextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#FF575757">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#FF666666"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF606578"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="#FF313132"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="border" BorderBrush="#FF878787" Width="17" Height="17" BorderThickness="1" Background="{TemplateBinding Background}">
                           <!--<TextBlock FontWeight="Bold" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="X"/>-->
                            <Image x:Name="ImgTick" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="Images/Done_16px.png" Visibility="Hidden" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="3,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundTextColor}"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF3B3B42"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True" >
                            <Setter TargetName="ImgTick" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel" Margin="1,0,0,0">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="16,7"
                              RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="#FF333337" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="#FF474747" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Panel" Property="Background" Value="#FF636363" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>